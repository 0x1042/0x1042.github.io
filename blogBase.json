{"startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "dayTheme": "light", "nightTheme": "dark_colorblind", "title": "Daily", "displayTitle": "aily", "subTitle": "\u6211\u81ea\u503e\u6000\uff0c\u541b\u4e14\u968f\u610f\u3002", "homeUrl": "http://0x1042.github.io", "avatarUrl": "https://raw.githubusercontent.com/0x1042/0x1042.github.io/master/synthwave_option_4.png", "faviconUrl": "https://raw.githubusercontent.com/0x1042/0x1042.github.io/master/synthwave_option_4.ico", "singlePage": ["link", "about"], "GMEEK_VERSION": "v2.4", "postListJson": {"P1": {"htmlDir": "docs/post/c++-zhong-shi-xian-golang-zhong-de-defer-gong-neng.html", "label": "\u57fa\u7840", "labelColor": "#33BE7E", "postTitle": "c++\u4e2d\u5b9e\u73b0golang\u4e2d\u7684defer\u529f\u80fd", "postUrl": "post/c%2B%2B-zhong-shi-xian-golang-zhong-de-defer-gong-neng.html", "postSourceUrl": "https://github.com/0x1042/0x1042.github.io/issues/1", "commentNum": 0, "description": "# \u4f7f\u7528`folly`\r\n\r\n```c++\r\n#include <folly/ScopeGuard.h>\r\n\r\nauto main() -> int {\r\n    std::string msg = \"exit...\";\r\n\r\n    auto guard1 = folly::makeGuard([&] { std::cerr << \"from folly::makeGuard:\" << msg << '\\n'; });\r\n\r\n    std::cout << \"Hello, World!\" << '\\n';\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\n# \u81ea\u5b9a\u4e49\u5b9e\u73b0\r\n\r\n```c++\r\ntemplate <typename Lambda> \r\nstruct Defer : Lambda {\r\n    ~Defer() { Lambda::operator()(); }\r\n};\r\n\r\ntemplate <typename Lambda> \r\nDefer(Lambda) -> Defer<Lambda>;\r\n\r\nauto main() -> int {\r\n    std::string msg = \"exit...\";\r\n\r\n    Defer guard{[&] { std::cerr << msg << '\\n'; }};\r\n\r\n    std::cout << \"Hello, World!\" << '\\n';\r\n    return 0;\r\n}\r\n```\r\n\u3002", "top": 0, "createdAt": 1698249441, "style": "", "script": "", "createdDate": "2023-10-25", "dateLabelColor": "#A333D0"}, "P2": {"htmlDir": "docs/post/golang-zhong-protobuf -fan-xu-lie-hua-xing-neng-you-hua.html", "label": "go", "labelColor": "#7B7AB9", "postTitle": "golang\u4e2dprotobuf \u53cd\u5e8f\u5217\u5316\u6027\u80fd\u4f18\u5316", "postUrl": "post/golang-zhong-protobuf%20-fan-xu-lie-hua-xing-neng-you-hua.html", "postSourceUrl": "https://github.com/0x1042/0x1042.github.io/issues/2", "commentNum": 0, "description": "# \u80cc\u666f\r\n\r\n\u7ebf\u4e0a\u6709\u4e00\u4e9b\u516c\u5171\u4f7f\u7528\u7684\u8d85\u5927`protobuf`\uff0c\u90e8\u5206\u5355**message\u7684field\u5927\u4e8e10000**\u3002", "top": 0, "createdAt": 1698484079, "style": "", "script": "", "createdDate": "2023-10-28", "dateLabelColor": "#A333D0"}, "P3": {"htmlDir": "docs/post/struct -shi-yong-sheng-ming-zhou-qi-biao-zhu.html", "label": "rust", "labelColor": "#6EF5AE", "postTitle": "struct \u4f7f\u7528\u751f\u547d\u5468\u671f\u6807\u6ce8", "postUrl": "post/struct%20-shi-yong-sheng-ming-zhou-qi-biao-zhu.html", "postSourceUrl": "https://github.com/0x1042/0x1042.github.io/issues/3", "commentNum": 0, "description": "```rust\r\n#[derive(Debug)]\r\nstruct Sheep<'c, 'd> {\r\n    age: &'c u32,\r\n    name: &'d str,\r\n}\r\n\r\nimpl<'c, 'd> Sheep<'c, 'd> {\r\n    /// Returns the get age of this [`Sheep`].\r\n    pub fn get_age(&self) -> u32 {\r\n        *self.age\r\n    }\r\n\r\n    /// Returns the get name of this [`Sheep`].\r\n    pub fn get_name(&self) -> String {\r\n        self.name.to_owned()\r\n    }\r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n    use super::Sheep;\r\n    #[test]\r\n    fn test_lt() {\r\n        let age = 5;\r\n        let name = \"dollor\";\r\n\r\n        let sheep = Sheep {\r\n            age: &age,\r\n            name: name,\r\n        };\r\n\r\n        println!(\"name is {:?}\", sheep.get_name());\r\n        println!(\"age is {:?}\", sheep.get_age());\r\n\r\n        println!(\"sheep :{:?}\", sheep);\r\n    }\r\n}\r\n```\u3002", "top": 0, "createdAt": 1698857748, "style": "", "script": "", "createdDate": "2023-11-01", "dateLabelColor": "#A333D0"}, "P4": {"htmlDir": "docs/post/c++-zhong-de-zhi-lei-xing.html", "label": "c++", "labelColor": "#BE8008", "postTitle": "c++\u4e2d\u7684\u503c\u7c7b\u578b", "postUrl": "post/c%2B%2B-zhong-de-zhi-lei-xing.html", "postSourceUrl": "https://github.com/0x1042/0x1042.github.io/issues/4", "commentNum": 0, "description": "# \u503c\u7c7b\u522b \r\n\r\n- [\u503c\u7c7b\u522b](#\u503c\u7c7b\u522b)\r\n  - [\u5982\u4f55\u533a\u5206\u5de6\u503c\u548c\u53f3\u503c](#\u5982\u4f55\u533a\u5206\u5de6\u503c\u548c\u53f3\u503c)\r\n  - [\u51fd\u6570\u53c2\u6570\u5339\u914d](#\u51fd\u6570\u53c2\u6570\u5339\u914d)\r\n  - [\u503c\u7c7b\u578b](#\u503c\u7c7b\u578b)\r\n  - [\u4e07\u80fd\u5f15\u7528 **universal reference**](#\u4e07\u80fd\u5f15\u7528-universal-reference)\r\n  - [\u5f15\u7528\u6298\u53e0 **reference collapsing**](#\u5f15\u7528\u6298\u53e0-reference-collapsing)\r\n  - [\u5b8c\u7f8e\u8f6c\u53d1 **perfect forward**](#\u5b8c\u7f8e\u8f6c\u53d1-perfect-forward)\r\n\r\n## \u5982\u4f55\u533a\u5206\u5de6\u503c\u548c\u53f3\u503c\r\n\r\n```c++\r\nvoid log(std::string_view message, std::source_location location) {\r\n    std::clog << \"file: \" << location.file_name() << '(' << location.line() << ':' << location.column() << \") `\" << location.function_name()\r\n              << \"`: \" << message << '\\n';\r\n}\r\n\r\nvoid foo(int & /*val*/) {\r\n    log(\"foo1\");\r\n}\r\n\r\nvoid foo(int && /*val*/) {\r\n    log(\"foo2\");\r\n}\r\n```\r\n\r\n```cpp\r\nint && value = 1024;\r\nfoo(value); // \u8c03\u7528\u7684\u662f void foo(int &)\r\n```\r\n\r\n- \u533f\u540d\u7684\u4e34\u65f6\u5bf9\u8c61\u662f\u53f3\u503c\uff0c\u5177\u540d\u7684\u53f3\u503c\u5f15\u7528\u5bf9\u8c61\u662f\u5de6\u503c \r\n- \u5982\u679c\u8868\u8fbe\u5f0f\u53ef\u4ee5\u53d6\u5730\u5740\uff0c\u5219\u4e3a\u5de6\u503c\u8868\u8fbe\u5f0f\uff0c\u5426\u5219\uff0c\u4e3a\u53f3\u503c\u8868\u8fbe\u5f0f\r\n- \u8868\u8fbe\u5f0f value \u662f\u5177\u540d\u7684\u53f3\u503c\u5f15\u7528\u5bf9\u8c61\uff0cvalue \u4e5f\u53ef\u4ee5\u53d6\u5730\u5740\uff0c\u6240\u4ee5 \u8868\u8fbe\u5f0fvalue \u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u5339\u914d\u7b2c\u4e00\u4e2a\u51fd\u6570\r\n\r\n## \u51fd\u6570\u53c2\u6570\u5339\u914d\r\n\r\n| \u53c2\u6570\u7c7b\u578b      | \u8bf4\u660e                                     |\r\n| ------------- | ---------------------------------------- |\r\n| Value&        | \u53ea\u80fd\u5339\u914d\u5de6\u503c\u8868\u8fbe\u5f0f                       |\r\n| Value&&       | \u53ea\u80fd\u7ed1\u5b9a\u53f3\u503c\u8868\u8fbe\u5f0f\uff08\u6a21\u677f\u51fd\u6570\u4e0b\u5355\u72ec\u8ba8\u8bba\uff09 |\r\n| const Value&  | \u53ef\u4ee5\u5339\u914d\u5de6\u503c\u548c\u53f3\u503c\u8868\u8fbe\u5f0f                 |\r\n| const Value&& | \u5b9e\u9645\u4e0d\u4f7f\u7528                               |\r\n\r\n\r\n## \u503c\u7c7b\u578b \r\n\r\n- \u6cdb\u5de6\u503c\uff1a \u5de6\u503c \u548c \u5c06\u4ea1\u503c\r\n- \u53f3\u503c\uff1a\u7eaf\u53f3\u503c \u548c \u5c06\u4ea1\u503c\r\n- `static_cast<Value&&>(value)` \u662f\u5c06\u4ea1\u503c\uff0c\u5e38\u89c1\u7684\u5c06\u4ea1\u503c\u662f \u51fd\u6570\u7684\u8fd4\u56de\u503c \r\n![types](https://github.com/0x1042/0x1042.github.io/assets/7525242/0fae6f7f-bce8-41b6-ad2d-45cc312ec7b4)\r\n\r\n\r\n## \u4e07\u80fd\u5f15\u7528 **universal reference** \r\n\r\n> \u5982\u4f55\u533a\u5206 Arg&& \u662f\u53f3\u503c\u5f15\u7528\u8fd8\u662f\u4e07\u80fd\u5f15\u7528\uff1f\r\n\r\n- **\u5982\u679c Arg&& \u662f\u6a21\u677f\u53c2\u6570\u6216\u8005 auto\uff0c\u5219\u662f\u4e07\u80fd\u5f15\u7528\uff0c\u300c\u65e2\u53ef\u4ee5\u63a5\u53d7\u5de6\u503c\uff0c\u4e5f\u53ef\u4ee5\u63a5\u53d7\u53f3\u503c\u300d\uff0c\u5426\u5219\u4e3a\u53f3\u503c\u5f15\u7528**\r\n- **\u4e07\u80fd\u5f15\u7528\u5728\u7c7b\u578b\u63a8\u5bfc\u8bed\u5883\u4e0b\uff0c\u53ef\u4ee5\u4fdd\u7559\u7c7b\u578b\u7684cv\u9650\u5b9a\u7b26\u300cconst\u548cvolatile\u300d\u548c\u503c\u7c7b\u522b**\r\n\r\n## \u5f15\u7528\u6298\u53e0 **reference collapsing**\r\n\r\n> \u4e3a\u4e86\u89e3\u51b3 reference to reference \u7684\u95ee\u9898\r\n\r\nc++ \u4e2d\u4e0d\u5141\u8bb8\u6307\u5411\u5f15\u7528\u7684\u5f15\u7528\uff0c\u5bf9\u4e8e\u6307\u5411\u5f15\u7528\u7684\u5f15\u7528\u4f1a\u88ab\u7b80\u5316\uff0c\u63a8\u5bfc\u89c4\u5219\u5982\u4e0b \r\n\r\n```cpp\r\ntemplate <typename T>\r\nvoid Example(T && input) {}\r\n```\r\n\r\n- \u51fd\u6570\u5f62\u53c2\u662f\u5de6\u503c\uff0cT&\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u5de6\u503c\uff0c\u5373input \u662f `T& &`\r\n- \u51fd\u6570\u5f62\u53c2\u662f\u5de6\u503c\uff0cT&\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u53f3\u503c\uff0c\u5373input \u662f `T& &&`\r\n- \u51fd\u6570\u5f62\u53c2\u662f\u53f3\u503c\uff0cT&&\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u5de6\u503c\uff0c\u5373input \u662f `T&& &`\r\n- \u51fd\u6570\u5f62\u53c2\u662f\u53f3\u503c\uff0cT&&\uff0c\u4f20\u5165\u7684\u5b9e\u53c2\u662f\u53f3\u503c\uff0c\u5373input \u662f `T&& &&`\r\n\r\n\u63a8\u5bfc\u89c4\u5219\u662f\uff1a **\u4ec5\u5f53\u4e24\u4e2a\u90fd\u662f\u53f3\u503c\u5f15\u7528\u65f6\uff0c\u63a8\u5bfc\u4e3a\u53f3\u503c\uff0c\u5176\u4f59\u60c5\u51b5\u4e3a\u5de6\u503c**\uff0c\u4e5f\u5c31\u662f `T&& &&`\u4e3a\u53f3\u503c\uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a\u5de6\u503c \r\n\r\n\r\n## \u5b8c\u7f8e\u8f6c\u53d1 **perfect forward** \r\n\r\n> \u5728\u4f20\u53c2\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4fdd\u7559\u53c2\u6570\u7684\u539f\u59cb\u7c7b\u578b \r\n\r\n```cpp\r\nvoid foo(int & val);\r\nvoid foo(int && val);\r\n\r\ntemplate <typename T> void call_foo(T && t) {\r\n    foo(std::forward<T>(t));\r\n}\r\n```\r\n\r\n\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\r\n\r\n```cpp\r\ntemplate <class _Tp>\r\n_LIBCPP_NODISCARD_EXT inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR _Tp&&\r\nforward(_LIBCPP_LIFETIMEBOUND __libcpp_remove_reference_t<_Tp>& __t) _NOEXCEPT {\r\n  return static_cast<_Tp&&>(__t);\r\n}\r\n\r\ntemplate <class _Tp>\r\n_LIBCPP_NODISCARD_EXT inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR _Tp&&\r\nforward(_LIBCPP_LIFETIMEBOUND __libcpp_remove_reference_t<_Tp>&& __t) _NOEXCEPT {\r\n  static_assert(!is_lvalue_reference<_Tp>::value, \"cannot forward an rvalue as an lvalue\");\r\n  return static_cast<_Tp&&>(__t);\r\n}\r\n```\r\n\r\n- Tp \u662f\u5de6\u503c\uff0c `static_cast<_Tp&&>(__t)` \u540e\u662f T& &&\uff0c\u6309\u7167\u5f15\u7528\u6298\u53e0\u89c4\u5219\uff0c`T& && -> T&`, Tp\u662f\u5de6\u503c \r\n- Tp \u662f\u53f3\u503c\uff0c `static_cast<_Tp&&>(__t)` \u540e\u662f T&& &&\uff0c\u6309\u7167\u5f15\u7528\u6298\u53e0\u89c4\u5219\uff0c`T&& && -> T&&`, Tp\u662f\u53f3\u503c \u3002", "top": 0, "createdAt": 1699692495, "style": "", "script": "", "createdDate": "2023-11-11", "dateLabelColor": "#A333D0"}}, "singeListJson": {}, "prevUrl": "disabled", "nextUrl": "disabled"}